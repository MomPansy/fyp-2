/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root.tsx';
import { Route as RegisterRouteImport } from './routes/register.tsx';
import { Route as LoginRouteImport } from './routes/login.tsx';
import { Route as StudentRouteImport } from './routes/_student.tsx';
import { Route as AdminRouteImport } from './routes/_admin.tsx';
import { Route as IndexRouteImport } from './routes/index.tsx';
import { Route as StudentStudentDashboardRouteImport } from './routes/_student.student.dashboard.tsx';
import { Route as AdminAdminTemplateProblemsRouteImport } from './routes/_admin.admin.template-problems.tsx';
import { Route as AdminAdminProblemsRouteImport } from './routes/_admin.admin.problems.tsx';
import { Route as AdminAdminDashboardRouteImport } from './routes/_admin.admin.dashboard.tsx';
import { Route as AdminAdminAssessmentsRouteImport } from './routes/_admin.admin.assessments.tsx';
import { Route as AdminAdminProblemIdDetailsRouteImport } from './routes/_admin.admin.problem.$id.details.tsx';
import { Route as AdminAdminProblemIdDatabaseRouteImport } from './routes/_admin.admin.problem.$id.database.tsx';
import { Route as AdminAdminProblemIdCreateRouteImport } from './routes/_admin.admin.problem.$id.create.tsx';
import { Route as AdminAdminAssessmentIdDetailsRouteImport } from './routes/_admin.admin.assessment.$id.details.tsx';

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any);
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any);
const StudentRoute = StudentRouteImport.update({
  id: '/_student',
  getParentRoute: () => rootRouteImport,
} as any);
const AdminRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const StudentStudentDashboardRoute = StudentStudentDashboardRouteImport.update({
  id: '/student/dashboard',
  path: '/student/dashboard',
  getParentRoute: () => StudentRoute,
} as any);
const AdminAdminTemplateProblemsRoute =
  AdminAdminTemplateProblemsRouteImport.update({
    id: '/admin/template-problems',
    path: '/admin/template-problems',
    getParentRoute: () => AdminRoute,
  } as any);
const AdminAdminProblemsRoute = AdminAdminProblemsRouteImport.update({
  id: '/admin/problems',
  path: '/admin/problems',
  getParentRoute: () => AdminRoute,
} as any);
const AdminAdminDashboardRoute = AdminAdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRoute,
} as any);
const AdminAdminAssessmentsRoute = AdminAdminAssessmentsRouteImport.update({
  id: '/admin/assessments',
  path: '/admin/assessments',
  getParentRoute: () => AdminRoute,
} as any);
const AdminAdminProblemIdDetailsRoute =
  AdminAdminProblemIdDetailsRouteImport.update({
    id: '/admin/problem/$id/details',
    path: '/admin/problem/$id/details',
    getParentRoute: () => AdminRoute,
  } as any);
const AdminAdminProblemIdDatabaseRoute =
  AdminAdminProblemIdDatabaseRouteImport.update({
    id: '/admin/problem/$id/database',
    path: '/admin/problem/$id/database',
    getParentRoute: () => AdminRoute,
  } as any);
const AdminAdminProblemIdCreateRoute =
  AdminAdminProblemIdCreateRouteImport.update({
    id: '/admin/problem/$id/create',
    path: '/admin/problem/$id/create',
    getParentRoute: () => AdminRoute,
  } as any);
const AdminAdminAssessmentIdDetailsRoute =
  AdminAdminAssessmentIdDetailsRouteImport.update({
    id: '/admin/assessment/$id/details',
    path: '/admin/assessment/$id/details',
    getParentRoute: () => AdminRoute,
  } as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/admin/assessments': typeof AdminAdminAssessmentsRoute;
  '/admin/dashboard': typeof AdminAdminDashboardRoute;
  '/admin/problems': typeof AdminAdminProblemsRoute;
  '/admin/template-problems': typeof AdminAdminTemplateProblemsRoute;
  '/student/dashboard': typeof StudentStudentDashboardRoute;
  '/admin/assessment/$id/details': typeof AdminAdminAssessmentIdDetailsRoute;
  '/admin/problem/$id/create': typeof AdminAdminProblemIdCreateRoute;
  '/admin/problem/$id/database': typeof AdminAdminProblemIdDatabaseRoute;
  '/admin/problem/$id/details': typeof AdminAdminProblemIdDetailsRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/admin/assessments': typeof AdminAdminAssessmentsRoute;
  '/admin/dashboard': typeof AdminAdminDashboardRoute;
  '/admin/problems': typeof AdminAdminProblemsRoute;
  '/admin/template-problems': typeof AdminAdminTemplateProblemsRoute;
  '/student/dashboard': typeof StudentStudentDashboardRoute;
  '/admin/assessment/$id/details': typeof AdminAdminAssessmentIdDetailsRoute;
  '/admin/problem/$id/create': typeof AdminAdminProblemIdCreateRoute;
  '/admin/problem/$id/database': typeof AdminAdminProblemIdDatabaseRoute;
  '/admin/problem/$id/details': typeof AdminAdminProblemIdDetailsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/_admin': typeof AdminRouteWithChildren;
  '/_student': typeof StudentRouteWithChildren;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/_admin/admin/assessments': typeof AdminAdminAssessmentsRoute;
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute;
  '/_admin/admin/problems': typeof AdminAdminProblemsRoute;
  '/_admin/admin/template-problems': typeof AdminAdminTemplateProblemsRoute;
  '/_student/student/dashboard': typeof StudentStudentDashboardRoute;
  '/_admin/admin/assessment/$id/details': typeof AdminAdminAssessmentIdDetailsRoute;
  '/_admin/admin/problem/$id/create': typeof AdminAdminProblemIdCreateRoute;
  '/_admin/admin/problem/$id/database': typeof AdminAdminProblemIdDatabaseRoute;
  '/_admin/admin/problem/$id/details': typeof AdminAdminProblemIdDetailsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/admin/assessments'
    | '/admin/dashboard'
    | '/admin/problems'
    | '/admin/template-problems'
    | '/student/dashboard'
    | '/admin/assessment/$id/details'
    | '/admin/problem/$id/create'
    | '/admin/problem/$id/database'
    | '/admin/problem/$id/details';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/login'
    | '/register'
    | '/admin/assessments'
    | '/admin/dashboard'
    | '/admin/problems'
    | '/admin/template-problems'
    | '/student/dashboard'
    | '/admin/assessment/$id/details'
    | '/admin/problem/$id/create'
    | '/admin/problem/$id/database'
    | '/admin/problem/$id/details';
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_student'
    | '/login'
    | '/register'
    | '/_admin/admin/assessments'
    | '/_admin/admin/dashboard'
    | '/_admin/admin/problems'
    | '/_admin/admin/template-problems'
    | '/_student/student/dashboard'
    | '/_admin/admin/assessment/$id/details'
    | '/_admin/admin/problem/$id/create'
    | '/_admin/admin/problem/$id/database'
    | '/_admin/admin/problem/$id/details';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AdminRoute: typeof AdminRouteWithChildren;
  StudentRoute: typeof StudentRouteWithChildren;
  LoginRoute: typeof LoginRoute;
  RegisterRoute: typeof RegisterRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register';
      path: '/register';
      fullPath: '/register';
      preLoaderRoute: typeof RegisterRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_student': {
      id: '/_student';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof StudentRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_admin': {
      id: '/_admin';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AdminRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_student/student/dashboard': {
      id: '/_student/student/dashboard';
      path: '/student/dashboard';
      fullPath: '/student/dashboard';
      preLoaderRoute: typeof StudentStudentDashboardRouteImport;
      parentRoute: typeof StudentRoute;
    };
    '/_admin/admin/template-problems': {
      id: '/_admin/admin/template-problems';
      path: '/admin/template-problems';
      fullPath: '/admin/template-problems';
      preLoaderRoute: typeof AdminAdminTemplateProblemsRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/problems': {
      id: '/_admin/admin/problems';
      path: '/admin/problems';
      fullPath: '/admin/problems';
      preLoaderRoute: typeof AdminAdminProblemsRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard';
      path: '/admin/dashboard';
      fullPath: '/admin/dashboard';
      preLoaderRoute: typeof AdminAdminDashboardRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/assessments': {
      id: '/_admin/admin/assessments';
      path: '/admin/assessments';
      fullPath: '/admin/assessments';
      preLoaderRoute: typeof AdminAdminAssessmentsRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/problem/$id/details': {
      id: '/_admin/admin/problem/$id/details';
      path: '/admin/problem/$id/details';
      fullPath: '/admin/problem/$id/details';
      preLoaderRoute: typeof AdminAdminProblemIdDetailsRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/problem/$id/database': {
      id: '/_admin/admin/problem/$id/database';
      path: '/admin/problem/$id/database';
      fullPath: '/admin/problem/$id/database';
      preLoaderRoute: typeof AdminAdminProblemIdDatabaseRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/problem/$id/create': {
      id: '/_admin/admin/problem/$id/create';
      path: '/admin/problem/$id/create';
      fullPath: '/admin/problem/$id/create';
      preLoaderRoute: typeof AdminAdminProblemIdCreateRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/_admin/admin/assessment/$id/details': {
      id: '/_admin/admin/assessment/$id/details';
      path: '/admin/assessment/$id/details';
      fullPath: '/admin/assessment/$id/details';
      preLoaderRoute: typeof AdminAdminAssessmentIdDetailsRouteImport;
      parentRoute: typeof AdminRoute;
    };
  }
}

interface AdminRouteChildren {
  AdminAdminAssessmentsRoute: typeof AdminAdminAssessmentsRoute;
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute;
  AdminAdminProblemsRoute: typeof AdminAdminProblemsRoute;
  AdminAdminTemplateProblemsRoute: typeof AdminAdminTemplateProblemsRoute;
  AdminAdminAssessmentIdDetailsRoute: typeof AdminAdminAssessmentIdDetailsRoute;
  AdminAdminProblemIdCreateRoute: typeof AdminAdminProblemIdCreateRoute;
  AdminAdminProblemIdDatabaseRoute: typeof AdminAdminProblemIdDatabaseRoute;
  AdminAdminProblemIdDetailsRoute: typeof AdminAdminProblemIdDetailsRoute;
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminAssessmentsRoute: AdminAdminAssessmentsRoute,
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
  AdminAdminProblemsRoute: AdminAdminProblemsRoute,
  AdminAdminTemplateProblemsRoute: AdminAdminTemplateProblemsRoute,
  AdminAdminAssessmentIdDetailsRoute: AdminAdminAssessmentIdDetailsRoute,
  AdminAdminProblemIdCreateRoute: AdminAdminProblemIdCreateRoute,
  AdminAdminProblemIdDatabaseRoute: AdminAdminProblemIdDatabaseRoute,
  AdminAdminProblemIdDetailsRoute: AdminAdminProblemIdDetailsRoute,
};

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren);

interface StudentRouteChildren {
  StudentStudentDashboardRoute: typeof StudentStudentDashboardRoute;
}

const StudentRouteChildren: StudentRouteChildren = {
  StudentStudentDashboardRoute: StudentStudentDashboardRoute,
};

const StudentRouteWithChildren =
  StudentRoute._addFileChildren(StudentRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  StudentRoute: StudentRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
